<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Test</title>
        <script type="text/javascript" src="./d3/d3.min.js"></script>
    </head>
    <body>
        <script type="text/javascript">

            var level = 0;

            var w=900;
            var h=100;
            var i=0;

            var mut = [];
            
            var x = d3.scale.linear().domain([0,2000000]).range([0,w]);
            var opa = d3.scale.linear().domain([0,4000]).range([0,1]);
            var y = d3.scale.linear().domain([0,100]).range([h,0]);

            var label = d3.select("body").append("p").text("place for name of protein");
            
            var svg = d3.select("body").append("svg")
            .attr("width",w).attr("length",h).append("g")
            .call(d3.behavior.zoom().x(x).scaleExtent([1,1000]).on("zoom", zoom));
            var border = svg.append("rect").attr("x", 0).attr("y",0)
            .attr("width",w)
            .attr("height",h)
            .style("fill","white")
            .style("stroke","pink")
            .style("stroke-width",1)
            .style("stroke-opacity",1);
            
            d3.tsv("/home/linux/gr246/st24615/Desktop/forjs/NC_012778.ptt", function(data)
            {
                data.forEach(function(d)
                {
                    if(level>3) level =0;
                    else level++;
                    d.Length = +d.Length;
                    var dsv = d3.dsv("..", "text/plain");
                    var d_tmp = dsv.parseRows(d.Location);
                    d.Location1 = +d_tmp[0][0];
                    d.Location2 = +d_tmp[0][2];
                     svg.append("line").attr("x1", x(d.Location1))
                    .attr("x2",x(d.Location2))
                    .style("stroke","blue")
                    .style("stroke-width",5)
                    .attr("y1",20+level*5).attr("y2",20+level*5)
                    .style("stroke-opacity", opa(d.Length))
                    .on("mouseover", function()
                    {
                        label.text(d.Product);
                    });
                });
           });
           var cross_keeper = [];
            var cross;
            d3.csv("/home/linux/gr246/st24615/Desktop/forjs/qua.qu", function(data)
            {
                    cross_keeper = data;
                    cross = svg.selectAll("line").data(cross_keeper).enter() 
                    .append("line").attr("x1", function(d){return x(+d.num);})
                    .attr("x2",function(d){return x(+d.num);})
                    .style("stroke","crimson")
                    .style("stroke-width",1)
                    .attr("y1",0).attr("y2",10)
                     .attr("transform", transform_cross)
                    .on("mouseover", up_text);

            });
            
            
            
            function zoom()
            {
                cross.attr("transform", transform_cross);
            }
            function transform_cross(d)
            {
                return "translate(" + x(+d.num)+ "," + "0" + ")";
            }    
            function up_text(d)
            {
                label.text(d.letter+"Mutation");
            }
        </script>
    </body>
</html>
